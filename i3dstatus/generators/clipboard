#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import gi
import cgi
import os

from i3dstatus.block import Block

block = Block(os.path.basename(__file__))

try:
    gi.require_version('Gtk', '3.0')
    from gi.repository import Gtk, GLib, Gdk
except ImportError as e:
    block.error('could not import python3 gobject Gtk library')
    raise e

truncate_length = 20
clipboard_format = '%text'

if 'format' in block.config:
    clipboard_format = block.config['format']
if 'truncate-length' in block.config:
    truncate_length = block.config['truncate-length']


def format_clipboard_text(cb):
    if not cb:
        return ""

    cb = cgi.escape(cb.replace('\n', ''))

    if len(cb) > truncate_length:
        cb = cb[0:truncate_length].rstrip() + 'â€¦'

    return cb


def on_owner_change(clipboard, _event):
    cb = clipboard.wait_for_text()

    if not cb:
        # no clipboard, so clear the block
        block.clear()
        return

    context = {'text': format_clipboard_text(cb)}

    block.show(clipboard_format, context=context, markup='pango')


def main():
    clipboard = Gtk.Clipboard.get(Gdk.SELECTION_CLIPBOARD)
    cb_text = clipboard.wait_for_text()

    context = {'text': format_clipboard_text(cb_text)}

    block.show(clipboard_format, context=context, markup='pango')

    clipboard.connect('owner-change', on_owner_change)

    GLib.MainLoop().run()


if __name__ == '__main__':
    main()
